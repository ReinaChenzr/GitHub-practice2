> data<-read.csv("C:/users/Lenovo/Desktop/1.csv")
> data
getwd()
> data<-read.csv("C:/users/Lenovo/Desktop/1.csv")
> data
data<-read.csv("C:/users/Lenovo/Desktop/1.csv")
data
data<-read.csv("C:/users/Lenovo/Desktop/2.csv")
data
q()
data<-read.csv("C:/users/Lenovo/Desktop/2.csv")
data
q()
data<-read.csv("C:/users/Lenovo/Desktop/2.csv")
data
data<-read.csv("C:/users/Lenovo/Desktop/2.csv")
data<-read.csv("C://users//Lenovo//Desktop//2.csv")
data
data<-read.csv("C:\\users\\Lenovo\\Desktop\\2.csv")
data
data<-read.csv("C:\\users\\Lenovo\\Desktop\\2.csv")
data
data<-read.csv("C:\\users\\Lenovo\\Desktop\\2.csv")
data
data<-read.csv("C://users//Lenovo//Desktop//2.csv")
data
q()
sessionInfo()
pwd
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
# 加载必要的库
library(ggplot2)
# 观测数据
X_obs <- c(3.5, 6.5, 2.5, 10.5, 8.5, 7.5, 10.5)
# 计算 MLE
n <- length(X_obs)
mu_hat <- mean(X_obs)
# 生成 mu 值范围
mu_values <- seq(3, 12, length.out = 100)
# 计算指数分布的似然函数
exp_likelihood <- function(mu, X) {
(1/mu)^length(X) * exp(-sum(X)/mu)
}
likelihoods <- sapply(mu_values, exp_likelihood, X = X_obs)
tinytex::install_tinytex()
Sys.Date()
format(Sys.Date(), "%Y-%m-%d")
installed.packages("labelled")
install.packages("labelled")
install.packages("car")
library(dplyr)
library(tidyverse)
install.packages("tidyverse")
install.packages("here")
library(tidyverse)
library(here)
# Load dataset online
data_url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
dataset <- read.csv(data_url, header = FALSE)
install.packages("tidyverse")
install.packages("here")
library(tidyverse)
library(here)
# Load dataset online
data_url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
dataset <- read.csv(data_url, header = FALSE)
colnames(dataset) <- c("age", "sex", "cp", "trestbps", "chol", "fbs", "restecg", "thalach", "exang", "oldpeak", "slope", "ca", "thal", "num")
dataset$num <- as.factor(dataset$num)
dataset$sex <- factor(dataset$sex, labels = c("Female", "Male"))
library(gt)
table_summary <- dataset %>%
select(age, sex, chol, thalach, num) %>%
group_by(num) %>%
summarise(
avg_age = mean(age, na.rm = TRUE),
avg_chol = mean(chol, na.rm = TRUE),
avg_thalach = mean(thalach, na.rm = TRUE)
)
gt(table_summary) %>%
tab_header(title = "Summary Statistics by Heart Disease Status")
library(ggplot2)
ggplot(dataset, aes(x = age, fill = num)) +
geom_histogram(bins = 20, alpha = 0.7) +
labs(title = "Age Distribution by Heart Disease Status",
x = "Age",
y = "Count",
fill = "Heart Disease") +
theme_minimal()
library(ggplot2)
ggplot(dataset, aes(x = age, fill = num)) +
geom_histogram(bins = 20, alpha = 0.7) +
labs(title = "Age Distribution by Heart Disease Status",
x = "Age",
y = "Count",
fill = "Heart Disease")
library(tidyverse)
library(here)
# Load dataset
library(httr)
data_url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
download.file(data_url, destfile = "processed_cleveland.data", mode = "wb")
dataset <- read.csv("processed_cleveland.data", header = FALSE)
colnames(dataset) <- c("age", "sex", "cp", "trestbps", "chol", "fbs", "restecg", "thalach", "exang", "oldpeak", "slope", "ca", "thal", "num")
dataset$num <- as.factor(dataset$num)
dataset$sex <- factor(dataset$sex, labels = c("Female", "Male"))
library(gt)
table_summary <- dataset %>%
select(age, sex, chol, thalach, num) %>%
group_by(num) %>%
summarise(
avg_age = mean(age, na.rm = TRUE),
avg_chol = mean(chol, na.rm = TRUE),
avg_thalach = mean(thalach, na.rm = TRUE)
)
gt(table_summary) %>%
tab_header(title = "Summary Statistics by Heart Disease Status")
library(ggplot2)
ggplot(dataset, aes(x = age, fill = num)) +
geom_histogram(bins = 20, alpha = 0.7) +
labs(title = "Age Distribution by Heart Disease Status",
x = "Age",
y = "Count",
fill = "Heart Disease")
library(tidyverse)
library(here)
# Load dataset
library(httr)
data_url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
response <- GET(data_url)
if (http_type(response) == "text/plain") {
writeBin(content(response, "raw"), "processed_cleveland.data")
dataset <- read.csv("processed_cleveland.data", header = FALSE)
} else {
stop("Failed to download the dataset.")
}
library(tidyverse)
library(here)
# Load dataset
library(httr)
data_url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data"
response <- GET(data_url)
if (http_type(response) == "text/plain") {
writeBin(content(response, "raw"), "processed_cleveland.data")
dataset <- read.csv("processed_cleveland.data", header = FALSE)
} else {
stop("Failed to download the dataset.")
}
library(tidyverse)
library(here)
# Load dataset
library(httr)
dataset <- read.csv("data/processed_cleveland.data", header = FALSE)
library(tidyverse)
library(here)
data_path <- "E:/AA msph bios/25spring/DATA 550/Final Project part_2/heart_disease_data/processed.cleveland.data"
dataset <- read.csv(data_path, header = FALSE, stringsAsFactors = FALSE)
colnames(dataset) <- c("age", "sex", "cp", "trestbps", "chol", "fbs",
"restecg", "thalach", "exang", "oldpeak",
"slope", "ca", "thal", "num")
dataset$num <- as.factor(dataset$num)
dataset$sex <- factor(dataset$sex, labels = c("Female", "Male"))
head(dataset)
library(gt)
table_summary <- dataset %>%
select(age, sex, chol, thalach, num) %>%
group_by(num) %>%
summarise(
avg_age = mean(age, na.rm = TRUE),
avg_chol = mean(chol, na.rm = TRUE),
avg_thalach = mean(thalach, na.rm = TRUE)
)
gt(table_summary) %>%
tab_header(title = "Summary Statistics by Heart Disease Status")
library(ggplot2)
ggplot(dataset, aes(x = age, fill = num)) +
geom_histogram(bins = 20, alpha = 0.7) +
labs(title = "Age Distribution by Heart Disease Status",
x = "Age",
y = "Count",
fill = "Heart Disease")
library(gt)
table_summary <- dataset %>%
select(age, sex, chol, thalach, num) %>%
group_by(num) %>%
summarise(
avg_age = mean(age, na.rm = TRUE),
avg_chol = mean(chol, na.rm = TRUE),
avg_thalach = mean(thalach, na.rm = TRUE)
)
gt(table_summary) %>%
tab_header(title = "Summary Statistics by Heart Disease Status")
setwd("C:/User/Lenovo/Desktop/GitHub_practice")
setwd("C:/Users/Lenovo/Desktop/GitHub_practice")
